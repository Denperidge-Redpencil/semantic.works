<main>

  <h1 class="sr-only">Semantic.Works</h1>

  <section class="sw-center">
    <h2 class="sr-only">Introduction</h2>

    <br>
    <br>

    <p class="sw-catchy">
      A microservice framework
      <br>
      powered by Linked Data
    </p>


    <LinkTo @route="tutorial" class="sw-btn big white">GET STARTED</LinkTo>
    <LinkTo @route="docs" class="sw-btn big black">GO TO DOCS</LinkTo>

  </section>


  <section class="sw-info">
    <h2 class="sr-only">About</h2>

    <section>
      <h3>Fuelled by Linked Data</h3>
      <p>
        Semantic.works offers a lightweight microservice framework that works in practice. <br>
        Microservices communicate through a shared semantic model resulting in a maintainable and extendable
        architecture
        instead of the typical microservice chaos.
      </p>
    </section>

    <section>
      <h3>Based on open standards</h3>
      <p>
        Semantic.works envisions an open internet. <br>
        It depends on open standards used in modern web application development such as HTTP, JSONAPI and SPARQL. All
        tools
        and components are open source and available to the community. Introducing vendor lock-in is not the ambition at
        all.
      </p>
    </section>

    <section>
      <h3>Building on the shoulders of giants</h3>
      <p>
        Semantic.works doesnâ€™t reinvent the wheel.<br>
        The framework imposes a couple of requirements, but mainly builds on well-known tools and frameworks such as
        Docker,
        ElasticSearch and Express that have a proven track record in production environments.
      </p>
    </section>

    <section>
      <h3>Pick the right tool for the job</h3>
      <p>
        Microservices tend to be small and simple, just fulfulling one single job in an isolated environment. The user
        has
        the flexibility to select the best tool for the job for each single microservice. Be it a web service in Ruby,
        JavaScript or even Lisp. It also creates the opportunity to easily experiment with new technologies in existing
        applications.

      </p>
    </section>

    <section>
      <h3>Raising developer productivity</h3>
      <p>
        Developers should spend their valuable time solving business-specific problems, not implementing the same boiler
        plate code over and over again. Semantic.works offers tooling, templates and reusable components in various
        languages in order to drive developer productivity to unprecedented levels.

      </p>
    </section>

    <section>
      <h3>Reuse that works in practice</h3>
      <p>
        Based on standardized semantic models, many backend services are easy to reuse. Semantic.works offers services
        for
        login, registration, regular resource listing and creation, migrations, exports, etc. All of those service work
        out-of-the-box. Some require a bit of configuration, but no need to master all the languages they're written in.
      </p>
    </section>
  </section>



  <section>
    <h2 class="sw-catchy">Trusted and used by</h2>
      <br>

     <img src='assets/images/clients.png' class="sw-img-fill"
        alt="Logos from the European Commision, Vlaamse Overheid (Flemish government), Big Data Europe, MOOF IT CONSULTANCY bvba and redpencil.io" />
  </section>



</main>
{{outlet}}